---
export const prerender = false; // ‚ö° Rend la page √† la demande (SSR)

import H1 from "../components/h1.astro";
import Layout from "../layouts/Layout.astro";
import { PROJECT } from "shared/config";
import { getPowerSavingEstimate } from "shared/utils/powerSaving";
import { getTotalDuration, getUsersRanking } from "src/api/users";
import { formatDuration } from "shared/utils/formatDuration";
import HomeIcon from "src/components/svg/homeIcon.astro";
import Medal from "src/components/svg/medal.astro";

// üì° R√©cup√©ration des donn√©es c√¥t√© serveur
const data = await getUsersRanking();
const totalDuration = await getTotalDuration();
const powerSavingEstimate = getPowerSavingEstimate(totalDuration);
---

<Layout title={`${PROJECT.TITLE} | Top 100`} description={PROJECT.DESCRIPTION}>
  <section class="flex flex-col items-center w-full max-w-5xl px-4 gap-4">
    <H1 title="Classement des 100 meilleurs utilisateurs" />
    <a
      href="/"
      class="btn text-secondary btn-lg rounded-full hover:text-secondary/80"
      ><HomeIcon /> Accueil</a
    >
    <p>
      Les utilisateur de {PROJECT.TITLE} ont, en totalit√©, pass√© <span
        class="text-accent">{formatDuration(totalDuration, true)}</span
      > hors ligne et √©conomis√© environ <span class="text-accent"
        >{powerSavingEstimate}</span
      >.
    </p>
    <fieldset class="fieldset">
      <legend class="fieldset-legend">Rechercher un utilisateur</legend>
      <div class="flex gap-2 items-center">
        <input
          id="usernameInput"
          type="text"
          class="input bg-secondary/30"
          placeholder="Pseudo"
        />
        <button
          id="searchBtn"
          class="btn text-secondary btn-sm rounded-full hover:text-secondary/80"
          >Rechercher</button
        >
      </div>
      <p id="errorMsg" class="text-danger mt-2 hidden"></p>
    </fieldset>
    <div class="overflow-x-auto w-full max-w-5xl mt-4 border border-primary/20">
      <table class="table text-base bg-sub-card/50 table-auto">
        <thead class="sticky top-0 bg-primary z-10 text-black">
          <tr>
            <th class="text-right">Rang</th>
            <th>Pseudo</th>
            <th class="text-right whitespace-nowrap">Dur√©e totale</th>
            <th>Pays</th>
            <th>R√©gion</th>
            <th>D√©partement</th>
          </tr>
        </thead>
        <tbody>
          {
            data && data.length > 0 ? (
              data.map((user, index) => (
                <tr class="hover:bg-secondary/20">
                  <th class="text-right flex items-center gap-2">
                    {index === 0 ? (
                      <Medal classes="text-yellow-500" />
                    ) : index === 1 ? (
                      <Medal classes="text-gray-300" />
                    ) : (
                      index === 2 && <Medal classes="text-orange-600" />
                    )}{" "}
                    {index + 1}
                  </th>
                  <td>
                    <a
                      href={`/${user.username}`}
                      class="text-primary font-bold hover:underline"
                    >
                      {user.username || "Utilisateur anonyme"}
                    </a>
                  </td>
                  <td class="text-right text-accent">
                    {formatDuration(user.total_duration || 0)}
                  </td>
                  <td>{user.country || "-"}</td>
                  <td>{user.region || "-"}</td>
                  <td>{user.subregion || "-"}</td>
                </tr>
              ))
            ) : (
              <tr>
                <td colspan="6" class="text-center">
                  Aucun utilisateur trouv√©.
                </td>
              </tr>
            )
          }
        </tbody>
      </table>
    </div>
  </section>
</Layout>

<script>
  import { getUser } from "src/api/users";

  const input = document.getElementById("usernameInput") as HTMLInputElement;
  const button = document.getElementById("searchBtn") as HTMLButtonElement;
  const errorMsg = document.getElementById("errorMsg") as HTMLParagraphElement;

  button.addEventListener("click", async () => {
    const username = input.value.trim();
    errorMsg.classList.add("hidden");
    errorMsg.textContent = "";

    if (!username) {
      errorMsg.textContent = "Veuillez entrer un pseudo.";
      errorMsg.classList.remove("hidden");
      return;
    }

    const user = await getUser(username);
    if (user) {
      window.location.href = `/${user.username}`;
    } else {
      errorMsg.textContent = "Aucun utilisateur trouv√©.";
      errorMsg.classList.remove("hidden");
    }
  });
</script>
